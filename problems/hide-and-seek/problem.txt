For this adventure, we will be using 3 commands: `cd`, `ls`, `pwd`, and `cat`.

# PROBLEM

Using `cd`, `ls`, and `pwd`, find a file called `hidden.txt` starting
from the directory:

  $DIR

Once you have found this file, print out its contents with `cat`:

  cat hidden.txt

The file will have further instructions.

To begin, navigate to the problem directory by typing:

  cd $DIR

in a terminal.

# COMMANDS

For this adventure, we will be using some commands. A command is a program
that you run by typing its name. All the words that follow a command on the
same line are the command's arguments.

For example, for this line of code:

  mv one.txt two.txt

the command is `mv` and the arguments are `one.txt` and `two.txt`.
Each command can handle its arguments however it wants.

## pwd

Print the current working directory. This is the directory that you are
"in". You can change which directory you are "in" by using `cd`.

## ls
## ls DIRECTORY

List the files in the current directory or list the files in DIRECTORY.

## cd DIRECTORY

The `cd` command navigates to the DIRECTORY given as an argument.

For example, if there is a directory in the current directory called `foo`
you can navigate to that directory with:

  cd foo

There is a special directory called `..` that you can use to go "up" to the
parent directory:

  cd ..

This is handy if you need to back-track out of a directory you navigated
into with `cd`.

You can even go up 2 parent directories at once with:

  cd ../..
  
or even go up 2 parent directories and then into some sub-directories all
in one shot:

  cd ../../foo/bar

## cat

If you want to inspect a file's contents, you can use `cat`. `cat` is short for
conCATenate. All the files you pass to `cat` as arguments will be read and
printed to the screen.

